{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;;AAAkD;AACK;AAChB;;AAEhC;AACP,kBAAkB,wDAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,MAAM;AAC7C,yBAAyB,UAAU;AACnC;;AAEA;AACA;AACA;AACA,0BAA0B,KAAK;AAC/B;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAS;;AAExB;AACA;AACA;AACA,YAAY,+DAAS;AACrB;AACA,IAAI,oDAAS;AACb;;AAEO;AACP;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,iCAAiC,+BAA+B;AAChE;AACA;AACA,8BAA8B,KAAK;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,+DAAS;AACrB;AACA;;;;;;;;;;;;;;;;AC9D0D;;AAE1D;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uEAAmB;AACvC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uCAAuC;AACtE;AACA,SAAS;AACT,KAAK;AACL;;;;;;;;;;;;;;;;;;;AChBqB;AACiD;AACT;;AAEtD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,0EAAS;;AAEb;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,wCAAwC,mFAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mFAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;;;;;;;;;;;;ACvJA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://card-game/./components/game-component.js","webpack://card-game/./components/render-component.js","webpack://card-game/./components/timer.js","webpack://card-game/./index.js","webpack://card-game/./style.css?6429","webpack://card-game/webpack/bootstrap","webpack://card-game/webpack/runtime/define property getters","webpack://card-game/webpack/runtime/hasOwnProperty shorthand","webpack://card-game/webpack/runtime/make namespace object","webpack://card-game/webpack/before-startup","webpack://card-game/webpack/startup","webpack://card-game/webpack/after-startup"],"sourcesContent":["import { renderApp } from \"./render-component.js\";\nimport { getCardsArray, gameLogic } from \"../index.js\";\nimport { initTimer } from \"./timer.js\";\n\nexport function renderGameComponent(level, appEl) {\n    const cards = getCardsArray(level);\n    const cardsHtml = cards.map((card) => CardHTML(card)).join(\"\");\n    const appHtml = `\n        <div class=\"game-header\">\n        <div class=\"timer\">\n        <div class=\"timer-title\">\n        <p class=\"time-labels\">min</p>\n        <p class=\"time-labels\">sek</p>\n        </div>\n        <p class=\"time\">00.00</p>\n        </div>\n        <button class=\"restart\">Начать заново</button>\n        </div>\n        <div class=\"play-field level-${level}\">\n        <ul id=\"cards\">${cardsHtml}</ul>\n        </div>`;\n\n    function CardHTML(card) {\n        return `<li class=\"jacket\">\n              <div class=\"card\">\n              <img src=\"${card}\" alt = \"карта\">\n              </div>\n              `;\n    }\n    appEl.innerHTML = appHtml;\n    const timer = appEl.querySelector(\".time\");\n    if (timer) initTimer(timer);\n\n    const restart = appEl.querySelector(\".restart\");\n    if (restart)\n        restart.onclick = () => {\n            renderApp(appEl);\n        };\n    gameLogic(cards);\n}\n\nexport function renderCongratulation(appEl, time, win) {\n    const winHtml = `<div class=\"finish-game\">\n      <div class=\"image\">\n      <img src=${\n          win ? \"./assets/img/celebration.png\" : \"./assets/img/dead.png\"\n      } alt = \"картинка\">\n      </div>\n      <h3 class=\"win-title\">Вы ${win ? \"выиграли\" : \"проиграли\"}!</h3>\n      <!-- <div class=\"time\"> -->\n      <p class=\"time-text\">Затраченное время:</p>\n      <p class=\"time-value\">${time}</p>\n      <!-- </div> -->\n      <button class=\"start-button\">Играть снова</button>\n    </div>`;\n    appEl.innerHTML = winHtml;\n\n    const restart = appEl.querySelector(\".start-button\");\n    if (restart)\n        restart.onclick = () => {\n            renderApp(appEl);\n        };\n}\n","import { renderGameComponent } from \"./game-component.js\";\n\nlet appEl = document.getElementById(\"app\");\n\nexport const renderApp = () => {\n    const appHtml = `\n    <form action=\"#\" class=\"complexity-box\">\n        <h1 class=\"complexity-title\">Выбери сложность</h1>\n        <fieldset class=\"input-level\">\n            <label for=\"easy-level\">\n                <input type=\"radio\" \n                id=\"easy-level\"\n                name=\"complexity\" \n                value=\"Легкий уровень - 6 карточек (3 пары)\">\n                <span class=\"level\">1</span>\n            </label>\n            <label for=\"medium-level\">\n                <input type=\"radio\" \n                id=\"medium-level\"\n                name=\"complexity\" \n                value=\"Средний уровень - 12 карточек (6 пар)\">\n                <span class=\"level\">2</span>\n            </label>\n            <label for=\"hard-level\">\n                <input type=\"radio\" \n                id=\"hard-level\"\n                name=\"complexity\" \n                value=\"Сложный уровень - 18 карточек (9 пар)\">\n                <span class=\"level\">3</span>\n            </label>\n        </fieldset>\n        <button type=\"submit\" id=\"start-button\" class=\"start-button\">Старт</button>\n    </form>\n    `;\n    appEl.innerHTML = appHtml;\n\n    const startButton = document.getElementById(\"start-button\");\n    if (startButton) {\n        startButton.onclick = () => {\n            const levels = document.querySelectorAll(\n                'input[name=\"complexity\"]',\n            );\n            for (const level of levels) {\n                if (level.checked) {\n                    const gameLevel = level.value;\n                    renderGameComponent(appEl, gameLevel);\n                }\n            }\n        };\n    }\n};\n","export function initTimer(element) {\n    let minutes = 0;\n    let seconds = 0;\n    setInterval(() => {\n        seconds++;\n        if (seconds === 60) {\n            minutes++;\n            seconds = 0;\n        }\n        if (minutes === 60) {\n            minutes = 0;\n        }\n        element.innerText = `${minutes < 10 ? \"0\" + minutes : minutes}.${\n            seconds < 10 ? \"0\" + seconds : seconds\n        }`;\n    }, 1000);\n}\n","import \"./style.css\";\nimport { renderCongratulation } from \"./components/game-component.js\";\nimport { renderApp } from \"./components/render-component.js\";\n\nexport function getCardsArray(level) {\n    let cards = [\n        \"./assets/img/cards/6 бубны.png\",\n        \"./assets/img/cards/6 крести.png\",\n        \"./assets/img/cards/6 пики.png\",\n        \"./assets/img/cards/6 черви.png\",\n        \"./assets/img/cards/7 бубны.png\",\n        \"./assets/img/cards/7 крести.png\",\n        \"./assets/img/cards/7 пики.png\",\n        \"./assets/img/cards/7 черви.png\",\n        \"./assets/img/cards/8 бубны.png\",\n        \"./assets/img/cards/8 крести.png\",\n        \"./assets/img/cards/8 пики.png\",\n        \"./assets/img/cards/8 черви.png\",\n        \"./assets/img/cards/9 бубны.png\",\n        \"./assets/img/cards/9 крести.png\",\n        \"./assets/img/cards/9 пики.png\",\n        \"./assets/img/cards/9 черви.png\",\n        \"./assets/img/cards/10 бубны.png\",\n        \"./assets/img/cards/10 крести.png\",\n        \"./assets/img/cards/10 пики.png\",\n        \"./assets/img/cards/10 черви.png\",\n        \"./assets/img/cards/валет бубны.png\",\n        \"./assets/img/cards/валет крести.png\",\n        \"./assets/img/cards/валет пики.png\",\n        \"./assets/img/cards/валет черви.png\",\n        \"./assets/img/cards/дама бубны.png\",\n        \"./assets/img/cards/дама крести.png\",\n        \"./assets/img/cards/дама пики.png\",\n        \"./assets/img/cards/дама черви.png\",\n        \"./assets/img/cards/король бубны.png\",\n        \"./assets/img/cards/король крести.png\",\n        \"./assets/img/cards/король пики.png\",\n        \"./assets/img/cards/король черви.png\",\n        \"./assets/img/cards/туз бубны.png\",\n        \"./assets/img/cards/туз крести.png\",\n        \"./assets/img/cards/туз пики.png\",\n        \"./assets/img/cards/туз черви.png\",\n    ];\n    let numCards = 6;\n    if (level === \"easy-level\") {\n        numCards = 6;\n    } else if (level === \"medium-level\") {\n        numCards = 12;\n    } else if (level === \"hard-level\") {\n        numCards = 18;\n    }\n    console.log(\"Кол-во карт :\", numCards);\n\n    cards = cards.concat(cards.slice(0, level / 2));\n\n    console.log(cards);\n}\n\nconst appEl = document.getElementById(\"app\");\nlet firstCard = null;\nlet secondCard = null;\nlet clickable = true;\nif (appEl) renderApp(appEl);\n\nexport function gameLogic(cards) {\n    if (appEl) {\n        const cardsJackets = appEl.querySelectorAll(\".jacket\");\n        cardsJackets.forEach((cardsJacket) => {\n            setTimeout(\n                () => cardsJacket.firstElementChild?.classList.add(\"secrete\"),\n                5000,\n            );\n            setTimeout(() => cardsJacket.classList.add(\"coup\"), 5000);\n        });\n\n        setTimeout(() => {\n            cardsJackets.forEach((cardsJacket, index) => {\n                cardsJacket.addEventListener(\"click\", () => {\n                    if (\n                        clickable === true &&\n                        !cardsJacket.classList.contains(\"success\")\n                    ) {\n                        setTimeout(\n                            () => cardsJacket.classList.remove(\"coup\"),\n                            200,\n                        );\n                        setTimeout(\n                            () =>\n                                cardsJacket.firstElementChild?.classList.remove(\n                                    \"secrete\",\n                                ),\n                            200,\n                        );\n\n                        if (firstCard === null) {\n                            firstCard = index;\n                        } else {\n                            if (index !== firstCard) {\n                                secondCard = index;\n                                clickable = false;\n                            }\n                        }\n                        if (\n                            firstCard !== null &&\n                            secondCard !== null &&\n                            firstCard !== secondCard\n                        ) {\n                            if (cards[firstCard] === cards[secondCard]) {\n                                cardsJackets[firstCard].classList.add(\n                                    \"success\",\n                                );\n                                cardsJackets[secondCard].classList.add(\n                                    \"success\",\n                                );\n                                firstCard = null;\n                                secondCard = null;\n                                clickable = true;\n                            } else {\n                                if (appEl) {\n                                    const time = appEl.querySelector(\".time\");\n                                    if (time)\n                                        renderCongratulation(\n                                            appEl,\n                                            time.innerText,\n                                        );\n                                    firstCard = null;\n                                    secondCard = null;\n                                    clickable = true;\n                                }\n                            }\n                            if (\n                                Array.from(cardsJackets).every((cardsJacket) =>\n                                    cardsJacket.classList.contains(\"success\"),\n                                )\n                            ) {\n                                if (appEl) {\n                                    const time = appEl.querySelector(\".time\");\n                                    if (time)\n                                        renderCongratulation(\n                                            appEl,\n                                            time.innerText,\n                                            \"win\",\n                                        );\n                                }\n                            }\n                        }\n                    }\n                });\n            });\n        }, 5000);\n    }\n}\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./index.js\");\n",""],"names":[],"sourceRoot":""}